Universe of Things, is an arcade style game using 3D animations in a 2D environment. The plot  of the game is that you are a pilot (the player) in space traveling to a distant land. The journey takes you through a vast universe where you encounter different obstacles along the way. During your journey you fight off different space hazards and alien ships, which pose a threat to your survival. The game is not completed (won) until the player makes it to his/her home planet, which occurs after the completion of the final level.

The player will also encounter environment collectables along the way. These consist of Hearts (to collect extra lives), Stars (to collect extra lasers for your player to shoot), and just general rupees (gems to collect for future features, i.e. in app purchases with fake money). Also, many more powerups (collectables) could be added, a few that have been mentioned are missiles, and a shield. Making purchases in the application with the gems and adding the extra environment collectables (missile, shield) will occur if time permits. 

The game will consist of 5 levels, each one progressively getting more difficulty to complete. Each level is not complete until the player encounters the final wave of boss hazards , whether they be alien ships or just more space trash (asteroids, etc..). 

The camera is set at an orthographic perspective, giving it the look of an arcade game. Controlling the player is done in a third person perspective. The game is developed using Unity 5.5.1 and the scripting is written in C#. 

Animation scenes will consist of different camera perspectives with the player's ship in view performing some type of aerial maneuver. The animation play time will be no longer than 60 seconds, and each level transition into an animation that will take the player to the next level respectively. 

Finally there is a database feature which allows the player to save their progress throughout the game. The player is securely logged in and out of the game using an encrypted password. The only credentials related to the player are their username and password. Security is not a huge concern since we are not asking for an email address. If the player forgets their password then they will have to create a new account. If there is not a good connection to the database or there is no internet connection at all, then the system will proceed independently from the database and will save all information in PlayerPrefs provided by the Unity.Engine library. In this case the feature of saving the player's state after closing the application will not exist.
